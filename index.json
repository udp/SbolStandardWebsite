[{"authors":["admin"],"categories":null,"content":" SBOL is an open standard for the representation of in silico biological designs. SBOL provides a data format composed of genetic vocabulary terms called SBOL Data. SBOL also provides schematic glyphs to graphically depict genetic designs called SBOL Visual. SBOL standardises data used by synthetic biology practitioners, from users to software developers to wet lab biologists.  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/sbol/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/sbol/","section":"authors","summary":"SBOL is an open standard for the representation of in silico biological designs. SBOL provides a data format composed of genetic vocabulary terms called SBOL Data. SBOL also provides schematic glyphs to graphically depict genetic designs called SBOL Visual.","tags":null,"title":"SBOL","type":"authors"},{"authors":null,"categories":null,"content":"Cello is a framework that describes what is essentially a programming language to design computational circuits in living cells. The circuits generated on plasmids expressed in Escherichia coli required careful insulation from their genetic context, but primarily functioned as specified. The circuits could, for example, regulate cellular functions in response to multiple environmental signals. Such a strategy can facilitate the development of more complex circuits by genetic engineering.\nCello converts electronic design specifications of combinational logic to complete DNA sequences encoding transcriptional logic circuits that can be executed in bacterial cells. A database of transcriptional repressors characterized in the Voigt lab provide genetic NOT gates and NOR gates that can be composed into any Boolean logic function specified in Verilog.\n         Contact Person Doug Densmore   Organization(s) Boston University   Programming Language Java/HTML/JS/CSS   OS/Platform Web   Availability Open-Source   License BSD 2-Clause    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"81567aa9090ae983f0af54f986a1a57e","permalink":"/applications/cello/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/cello/","section":"applications","summary":"A tool for Genetic circuit design automation","tags":["Circuit Design","Modeling","SBOL Visual","SBOL2 Export"],"title":"Cello","type":"applications"},{"authors":null,"categories":null,"content":"         Contact Person Nathan Hillson   Organization(s) Lawrence Berkeley National Lab   Programming Language JavaScript   OS/Platform Web    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"b7c400412f30c97e18c585b6caacc0b0","permalink":"/applications/device-editor/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/device-editor/","section":"applications","summary":"Visual biocad canvas for specifying combinatorial DNA constructs for fabrication","tags":["Knowledge Management","Sequence Design","Circuit Design","Visualization","SBOL Visual","SBOL1 Import","SBOL1 Export"],"title":"Device Editor","type":"applications"},{"authors":null,"categories":null,"content":"         Contact Person Thomas Gorochowski   Organization(s) University of Bristol, UK (originally Voigt Lab, MIT)   Programming Language Python   OS/Platform Linux, Mac, Windows   Availability Open-Source   License MIT    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"871f1893ab788d166655de9ed25546cb","permalink":"/applications/dnaplotlib/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/dnaplotlib/","section":"applications","summary":"DNAplotlib enables highly customizable visualization of individual genetic constructs and libraries of design variants. It can be thought of in many ways as matplotlib for genetic diagrams.","tags":["Visualization","SBOL Visual","SBOL1 Import","SBOL1 Export","SBOL2 Import","SBOL2 Export"],"title":"DNAplotlib","type":"applications"},{"authors":null,"categories":null,"content":"         Contact Person Swapnil Bhatia   Organization(s) Boston University   Programming Language C/Java/Perl   OS/Platform Web   Availability Free for academic users    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"04ddf7c64febb5d6b31aab1ee6f7254a","permalink":"/applications/finch/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/finch/","section":"applications","summary":"Rule-based generation of constructs","tags":["Knowledge Management","Sequence Design","Circuit Design","Visualization","SBOL Visual","SBOL2 Export"],"title":"Finch","type":"applications"},{"authors":null,"categories":null,"content":"GeneGenie supports the design and self-assembly of synthetic genes and constructs. GeneGenie allows for the design of oligonucleotide cohorts encoding the gene sequence optimized for expression in any suitable host through an intuitive, easy-to-use web interface. The tool ensures consistent oligomer overlapping melting temperatures, minimizes the likelihood of misannealing, optimizes codon usage for expression in a selected host, allows for specification of forward and reverse cloning sequences and also provides support for mutagenesis or directed evolution studies. Directed evolution studies are enabled through the construction of variant libraries via the optional specification of ‘variant codons’, containing mixtures of bases, at any position. For example, specifying the variant codon TNT (where N is any nucleotide) will encode a mixture of the amino acids Tyr, Ser, Cys and Phe.\n         Contact Person Neil Swainston   Organization(s) Manchester Centre for Synthetic Biology of Fine and Specialty Chemicals (SYNBIOCHEM)   Programming Language Java   OS/Platform Web   Availability Open-Source    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"1b7f3e603cbe51cbf43d326d9da43e71","permalink":"/applications/genegenie/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/genegenie/","section":"applications","summary":"GeneGenie supports the design and self-assembly of synthetic genes and constructs.","tags":["Sequence Design","SBOL1 Export"],"title":"GeneGenie","type":"applications"},{"authors":null,"categories":null,"content":"GenoCAD is a rule-based DNA design tool. It includes an extensive library of genetic parts derived from the annotation of common plasmids. It allows users to define domain specific languages to design expression systems for particular applications.\n         Contact Person Jean Peccoud   Organization(s) GenoFAB, LLC   Programming Language PHP/Java/Prolog/JS   OS/Platform Web   Availability Commercial    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"1a2ec5b50de9caf1e138f45ca76f79a1","permalink":"/applications/genocad/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/genocad/","section":"applications","summary":"A rule-based DNA design tool.","tags":["Knowledge Management","Sequence Design","Circuit Design","SBOL Visual","SBOL2 Import","SBOL2 Export"],"title":"GenoCAD","type":"applications"},{"authors":null,"categories":null,"content":"iBioSim has been developed for the modeling, analysis, and design of genetic circuits. While iBioSim primarily targets models of genetic circuits, models representing metabolic networks, cell-signaling pathways, and other biological and chemical systems can also be analyzed. iBioSim also includes modeling and visualization support for multi-cellular and spatial models as well. It is capable of importing and exporting models specified using the Systems Biology Markup Language (SBML). It can import all levels and versions of SBML and is able to export Level 3 Version 1. It supports all core SBML modeling constructs except some types of fast reactions, and also has support for the hierarchical model composition, layout, flux balance constraints, and arrays packages. It was the first tool to produce correct results for all examples in the SBML benchmark suite. It has also been tested successfully on the stochastic benchmark suite and the curated models in the BioModels database. Finally, it is one of the first tools to also support the Synthetic Biology Open Language (SBOL), an emerging standard for information exchange in synthetic biology.\n           Contact Person Chris Myers   Organization(s) University of Utah   Programming Language Java/C++   OS/Platform Linux, Mac, Windows   Availability Open-Source   License MIT    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"051f4be4ee255c83f1e808734d77893f","permalink":"/applications/ibiosim/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/ibiosim/","section":"applications","summary":"iBioSim has been developed for the modeling, analysis, and design of genetic circuits.","tags":["Circuit Design","Modeling","Visualization","SBOL Visual","SBOL1 Import","SBOL1 Export","SBOL2 Import","SBOL2 Export"],"title":"iBioSim","type":"applications"},{"authors":null,"categories":null,"content":"         Contact Person Hector Plahar   Organization(s) Lawrence Berkeley National Lab   Programming Language Java   OS/Platform Web   Availability Open-Source   License BSD    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"fae05ad00938fa33ebae6f178369bcc9","permalink":"/applications/ice/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/ice/","section":"applications","summary":"Physical and Informatic repository and associated tools for plant seeds, microbial strains, DNA and protein sequences.","tags":["Knowledge Management","Sequence Design","Visualization","SBOL Visual","SBOL2 Import","SBOL2 Export"],"title":"ICE","type":"applications"},{"authors":null,"categories":null,"content":"         Contact Person Nathan Hillson   Organization(s) Lawrence Berkeley National Lab   Programming Language Perl   OS/Platform Web    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"60e58192239e201655635b54f4f048ef","permalink":"/applications/j5/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/j5/","section":"applications","summary":"DNA assembly design automation","tags":["Sequence Design","Modeling","SBOL Visual","SBOL1 Import","SBOL1 Export"],"title":"j5","type":"applications"},{"authors":null,"categories":null,"content":"         Contact Person Goksel Misirli, Anil Wipat   Organization(s) Newcastle University   Programming Language Java   OS/Platform Linux, Mac, Windows   Availability Free for all users    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"5fc3356a0dc4bd3fe54356970677aadb","permalink":"/applications/mosec/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/mosec/","section":"applications","summary":"Automated derivation of genetic circuit designs from computational models.","tags":["Sequence Design","Circuit Design","Visualization","SBOL1 Export"],"title":"MoSeC","type":"applications"},{"authors":null,"categories":null,"content":"         Contact Person Swapnil Bhatia   Organization(s) Bhatia Lab at Boston University   Programming Language Perl   OS/Platform Web   Availability Free    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"6fab13e86d680fd44984eba7ccd32ba9","permalink":"/applications/pigeon/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/pigeon/","section":"applications","summary":"A simple chart, cheat sheet, and short accessible document describing the latest SBOL data model. A faster adoption process for SBOL Visual glyphs","tags":["Visualization","SBOL Visual"],"title":"Pigeon Visualizer","type":"applications"},{"authors":null,"categories":null,"content":"Pinecone is Serotiny’s web-based protein design software aimed at researchers doing R\u0026amp;D for therapeutics, materials, as well as those in basic research. Serotiny optimized Pinecone for designing protein constructs by focusing on functional protein domains as the basic unit of design.\nPinecone’s high-level approach allows plain language design, analysis and transmission of complex genetic construct sets. Researchers can design single proteins, or they can benefit from the economies of scale in designing combinatorial sets or mutation libraries. Pinecone then matches the design with CROs or DNA Synthesizers to produce and deliver the desired material, such as dsDNA, plasmid or purified protein.\nSerotiny aims to democratize protein engineering with Pinecone - bringing nano-scale genetic-tools to disparate disciplines that aren’t necessarily experts in genetics or molecular cloning, while also freeing geneticists and protein engineers to focus on experimental approach and execution rather than on the tedious design and construction of their starting material.\n           Contact Person Justin Farlow   Organization(s) Serotiny   Programming Language JavaScript   OS/Platform Web   Availability Free for all users    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"075fe0494f334db9273756bfc303825e","permalink":"/applications/pinecone/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/pinecone/","section":"applications","summary":"Serotiny’s web-based protein design software aimed at researchers doing R\u0026D for therapeutics, materials, as well as those in basic research.","tags":["Knowledge Management","Sequence Design","SBOL Visual","SBOL2 Import","SBOL2 Export"],"title":"Pinecone","type":"applications"},{"authors":null,"categories":null,"content":"The Pool Designer application is capable of analyzing a library of genetic construct variants encoded in SBOL and breaking this library down into pools of genetic parts that can be assembled into any library variant using multiplex assembly methods (see L. Woodruff et al., “Registry in a tube : multiplexed pools of retrievable parts for genetic design space exploration,” Nucl. Acids Res., 2016.).\n         Contact Person Nicholas Roehner   Organization(s) Biological Design Center, Boston University   Programming Language Java/JavaScript   OS/Platform Web   Availability Open-Source   License BSD 3-Clause    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"6615eb6ea86afc7f4662f908c55465a4","permalink":"/applications/pooldesigner/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/pooldesigner/","section":"applications","summary":"Designing Multiplexed Pools for Assembling Library Constructs","tags":["Sequence Design","SBOL Visual","SBOL1 Import","SBOL2 Import"],"title":"Pool Designer","type":"applications"},{"authors":null,"categories":null,"content":"         Contact Person Nathan Hillson   Organization(s) Berkeley Lab   Programming Language Perl   OS/Platform Web   Availability Free for all users    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"44978d03ee8d9039dda85d0ed6ccdf84","permalink":"/applications/sbolgenbank/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/sbolgenbank/","section":"applications","summary":"Loss-less interconversion of SBOL v1.1 and GenBank","tags":["SBOL1 Import","SBOL1 Export"],"title":"SBOL \u003c-\u003e Genbank Converter","type":"applications"},{"authors":null,"categories":null,"content":"SBOLDesigner 2.1 is a simple, biologist-friendly CAD software tool for creating and manipulating the sequences of genetic constructs using the Synthetic Biology Open Language (SBOL) 2.0 data model. Throughout the design process, SBOL Visual symbols, a system of schematic glyphs, provide standardized visualizations of individual parts. SBOLDesigner 2.1 completes a workflow for users of genetic design automation tools. It combines a simple user interface with the power of the SBOL standard and serves as a launchpad for more detailed designs involving simulations and experiments. Some new features in SBOLDesigner 2.1 are SBOL Stack integration, local repositories, importing of parts/sequences from existing files, import and export of GenBank and FASTA files, extended role ontology support, the ability to partially open designs with multiple root ComponentDefinitions, backward compatibility with SBOL 1.1, and versioning. SBOLDesigner is made freely available under the Apache 2.0 license.\n         Contact Person Doug Densmore   Organization(s) Boston University   Programming Language Java/HTML/JS/CSS   OS/Platform Web   Availability Open-Source   License BSD 2-Clause    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"b17166a30486dee6b54cd2a6c940b5c4","permalink":"/applications/sboldesigner/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/sboldesigner/","section":"applications","summary":"A simple, biologist-friendly CAD software tool for creating and manipulating the sequences of genetic constructs using SBOL","tags":["Knowledge Management","Sequence Design","Visualization","SBOL Visual","SBOL1 Import","SBOL1 Export","SBOL2 Import","SBOL2 Export"],"title":"SBOLDesigner","type":"applications"},{"authors":null,"categories":null,"content":"         Contact Person Hiroyuki Kuwahara   Organization(s) KAUST   Programming Language HTML/PHP/Python/SQL   OS/Platform Web   Availability Free for all users    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"231d1e42fd269d0a591fd164d55a97f4","permalink":"/applications/sbolme/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/sbolme/","section":"applications","summary":"An open-access repository of SBOL 2-compliant biochemical parts for a wide range of metabolic engineering applications.","tags":["Knowledge Management","SBOL2 Export"],"title":"SBOLme","type":"applications"},{"authors":null,"categories":null,"content":"         Contact Person Matthew Pocock, Anil Wipat   Organization(s) Newcastle University, Turing Ate My Hamster Ltd   Programming Language Scala   OS/Platform Linux/Mac/Win/Web    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"8d9a68b6dae5db5a0d7ad9a092ad9971","permalink":"/applications/shortbol/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/shortbol/","section":"applications","summary":"A shorthand language for SBOL","tags":["Sequence Design","Circuit Design","SBOL2 Export"],"title":"ShortBOL","type":"applications"},{"authors":null,"categories":null,"content":"SynBioHub is a registry for storing and sharing genetic circuit designs using the SBOL2 standard. Designs can be uploaded in SBOL or GenBank format, assigned a public link to share with collaborators and for publications, and searched using rich querying functionality.\n           Contact Person Anil Wipat   Organization(s) Newcastle University   Programming Language JavaScript   OS/Platform Linux/Mac/Win/Web   Availability Open-Source   License BSD 2-Clause    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"0619170bb1d121419f092f5ec0a60019","permalink":"/applications/synbiohub/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/synbiohub/","section":"applications","summary":"A registry for storing and sharing genetic circuit designs using the SBOL2 standard","tags":["Knowledge Management","Visualization","SBOL Visual","SBOL1 Import","SBOL2 Import","SBOL2 Export"],"title":"SynBioHub","type":"applications"},{"authors":null,"categories":null,"content":"A repository of modular models of biological components. These models are reusable and composable, and facilitate model-driven design of biological systems.\n         Contact Person Goksel Misirli, Anil Wipat   Organization(s) Newcastle University   Programming Language Java   OS/Platform Linux/Web    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"4cef536357fa29b2cea3e00578904f2d","permalink":"/applications/vpr/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/vpr/","section":"applications","summary":"A repository of modular models of biological components.","tags":["Knowledge Management","Circuit Design","Modeling","SBOL Visual","SBOL1 Import","SBOL1 Export","SBOL2 Export"],"title":"Virtual Parts Repository","type":"applications"},{"authors":null,"categories":null,"content":"VisBOL is a JavaScript software library to visualize DNA features from SBOL2 documents using the SBOL Visual standard. A Web interface is also provided to enable end-user access to generate diagrams for presentations and publications.\n         Contact Person Anil Wipat   Organization(s) Newcastle University   Programming Language JavaScript   OS/Platform Lin/Mac/Win/Web   Availability Open-Source   License BSD 2-Clause    ","date":1593475200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1593475200,"objectID":"263a7282512ff76c5dcd1c3b588cc6dc","permalink":"/applications/visbol/","publishdate":"2020-06-30T00:00:00Z","relpermalink":"/applications/visbol/","section":"applications","summary":"A JavaScript software library to visualize DNA features from SBOL2 documents using the SBOL Visual standard.","tags":["Visualization","SBOL Visual","SBOL2 Import"],"title":"VisBOL","type":"applications"},{"authors":["Hasan Baig","Pedro Fontanarrosa","Vishwesh Kulkarni","James McLaughlin","Prashant Vaidyanathan","Chris Myers","Bryan Bartley","Jacob Beal","Matthew Crowther","Thomas Gorochowski","Raik Grünberg","Goksel Misirli","Ernst Oberortner","James Scott-Brown","Anil Wipat"],"categories":[],"content":"","date":1585699200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585699200,"objectID":"64a2342d432e1709fc9596e1fa6175bd","permalink":"/publication/sbol3/","publishdate":"2016-04-01T00:00:00Z","relpermalink":"/publication/sbol3/","section":"publication","summary":"Synthetic biology builds upon genetics, molecular biology, and metabolic engineering by applying engineering principles to the design of biological systems. When designing a synthetic system, synthetic biologists need to exchange information about multiple types of molecules, the intended behavior of the system, and actual experimental measurements. The Synthetic Biology Open Language (SBOL) has been developed as a standard to support the specification and exchange of biological design information in synthetic biology, following an open community process involving both wet bench scientists and dry scientific modelers and software developers, across academia, industry, and other institutions. This document describes SBOL 3.0.0, which condenses and simplifies previous versions of SBOL based on experiences in deployment across a variety of scientific and industrial settings. In particular, SBOL 3.0.0, (1) separates sequence features from part/sub-part relationships, (2) renames Component Definition/Component to Component/Sub-Component, (3) merges Component and Module classes, (4) ensures consistency between data model and ontology terms, (5) extends the means to define and reference Sub-Components, (6) refines requirements on object URIs, (7) enables graph-based serialization, (8) moves Systems Biology Ontology (SBO) for Component types, (9) makes all sequence associations explicit, (10) makes interfaces explicit, (11) generalizes Sequence Constraints into a general structural Constraint class, and (12) expands the set of allowed constraints.","tags":[],"title":"Synthetic biology open language (SBOL) version 3.0.0","type":"publication"},{"authors":["Hasan Baig","Pedro Fontanarrosa","Vishwesh Kulkarni","James McLaughlin","Prashant Vaidyanathan","Bryan Bartley","Swapnil Bhatia","Shyam Bhakta","Michael Bissell","Kevin Clancy","Robert Sidney Cox","Angel Goñi Moreno","Thomas Gorochowski","Raik Grunberg","Augustin Luna","Curtis Madsen","Goksel Misirli","Tramy Nguyen","Nicolas Le Novere","Zachary Palchick","Matthew Pocock","Nicholas Roehner","Herbert Sauro","James Scott-Brown","John T Sexton","Guy-Bart Stan","Jeffrey J Tabor","Marta Vazquez Vilar","Christopher A Voigt","Anil Wipat","David Zong","Zach Zundel","Jacob Beal","Chris Myers"],"categories":[],"content":"","date":1585699200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585699200,"objectID":"172630c068751adad7b96b6cdf2a8d74","permalink":"/publication/visualsbol221/","publishdate":"2016-04-01T00:00:00Z","relpermalink":"/publication/visualsbol221/","section":"publication","summary":"People who are engineering biological organisms often find it useful to communicate in diagrams, both about the structure of the nucleic acid sequences that they are engineering and about the functional relationships between sequence features and other molecular species. Some typical practices and conventions have begun to emerge for such diagrams. The Synthetic Biology Open Language Visual (SBOL Visual) has been developed as a standard for organizing and systematizing such conventions in order to produce a coherent language for expressing the structure and function of genetic designs. This document details version 2.2 of SBOL Visual, which builds on the prior SBOL Visual 2.1 in several ways. First, the grounding of molecular species glyphs is changed from BioPAX to SBO, aligning with the use of SBO terms for interaction glyphs. Second, new glyphs are added for proteins, introns, and polypeptide regions (e. g., protein domains), the prior recommended macromolecule glyph is deprecated in favor of its alternative, and small polygons are introduced as alternative glyphs for simple chemicals.","tags":[],"title":"Synthetic biology open language visual (SBOL visual) version 2.2","type":"publication"},{"authors":["Göksel Mısırlı","Jacob Beal","Thomas E Gorochowski","Guy-Bart Stan","Anil Wipat","Chris J Myers"],"categories":[],"content":"","date":1584748800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1584748800,"objectID":"6b7265f62e3e1f5b525619c4131cd7dc","permalink":"/publication/visual2ontology/","publishdate":"2016-03-21T00:00:00Z","relpermalink":"/publication/visual2ontology/","section":"publication","summary":"Standardizing the visual representation of genetic parts and circuits is essential for unambiguously creating and interpreting genetic designs. To this end, an increasing number of tools are adopting well-defined glyphs from the Synthetic Biology Open Language (SBOL) Visual standard to represent various genetic parts and their relationships. However, the implementation and maintenance of the relationships between biological elements or concepts and their associated glyphs has up to now been left up to tool developers. We address this need with the SBOL Visual 2 Ontology, a machine-accessible resource that provides rules for mapping from genetic parts, molecules, and interactions between them, to agreed SBOL Visual glyphs. This resource, together with a web service, can be used as a library to simplify the development of visualization tools, as a stand-alone resource to computationally search for suitable glyphs, and to help facilitate integration with existing biological ontologies and standards in synthetic biology.","tags":[],"title":"SBOL Visual 2 Ontology","type":"publication"},{"authors":["Matthew Crowther","Lewis Grozinger","Matthew Pocock","Christopher P. D. Taylor","James A. McLaughlin","Göksel Mısırlı","Bryan A. Bartley","Jacob Beal","Angel Goñi-Moreno","Anil Wipat"],"categories":[],"content":"","date":1583280000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1583280000,"objectID":"61eb33d59cdf1e4191e95855b10ff470","permalink":"/publication/shortbol/","publishdate":"2016-03-04T00:00:00Z","relpermalink":"/publication/shortbol/","section":"publication","summary":"The Synthetic Biology Open Language (SBOL) is an emerging synthetic biology data exchange standard, designed primarily for unambiguous and efficient machine-to-machine communication. However, manual editing of SBOL is generally difficult for nontrivial designs. Here, we describe ShortBOL, a lightweight SBOL scripting language that bridges the gap between manual editing, visual design tools, and direct programming. ShortBOL is a shorthand textual language developed to enable users to create SBOL designs quickly and easily, without requiring strong programming skills or visual design tools.","tags":[],"title":"ShortBOL: A Language for Scripting Designs for Engineered Biological Systems Using Synthetic Biology Open Language (SBOL)","type":"publication"}]